service: test-service

provider:
  name: aws
  runtime: python3.7
  memorySize: 512 # optional, in MB, default is 1024
  timeout: 30 # optional, in seconds, default is 6
  versionFunctions: false # optional, default is true
  tracing:
    lambda: true # optional, enables tracing for all functions (can be true (true equals 'Active') 'Active' or 'PassThrough')

  stage: ${opt:stage, self:custom.defaultStage}
  profile: ${self:custom.profiles.${self:provider.stage}}

  vpc:
    securityGroupIds:
      - sg-0b2ca7e77be6f6241
    subnetIds:
      - subnet-0c3c4355c09d027f6
      - subnet-01db199462b2f1b2c
      - subnet-0d3c311f51d0519c3
      - subnet-0ba43ef46cc579f04
      - subnet-0c34f29aae1f7dac1
      - subnet-05bffd55dc53b521f

  apiKeys:
  - free:
    - dev-free-pulseclient
  - paid:
    - ${self:provider.stage}-pulseclient

  usagePlan: # Optional usage plan configuration
    - free:
      quota:
        limit: 5000
        offset: 2
        period: MONTH
      throttle:
        burstLimit: 200
        rateLimit: 100
    - paid:
      quota:
        limit: 100000
        period: DAY

  environment:
    DATABASE_USER: ${env:DATABASE_USER}
    DATABASE_PASSWORD: ${env:DATABASE_PASSWORD}
    DATABASE_HOST: ${env:DATABASE_HOST}
    DATABASE_NAME: ${env:DATABASE_NAME}
    # GOOGLE_API_KEY: ${env:GOOGLE_API_KEY}

custom:
  defaultStage: dev
  profiles:
    dev: dev_pulse_api
    prod: prod_pulse_api
  pythonRequirements:
    layer:
      name: ${self:provider.stage}-layerName
      description: Python requirements lamba layer
      compatibleRuntimes:
        - python3.7
      licenseInfo: GPLv3
      allowedAccounts:
        - '*'

functions:
  hello:
    handler: handler.hello
    layers:
      - {Ref: PythonRequirementsLambdaLayer}
      - arn:aws:lambda:us-east-1:668099181075:layer:AWSLambda-Python37-SciPy1x:2
     # - arn:aws:lambda:us-east-1:635472762977:layer:numpy:1
     # - arn:aws:lambda:us-east-1:635472762977:layer:libsutils:1
    events:
      - http:
          path: pulse_test
          method: post
          cors: true
          private: true
plugins:
  - serverless-python-requirements
